import speech_recognition as sr
import re
import random


import speech_recognition as sr

def calculate_fluency(audio):
    # Count the number of pauses longer than 1 second
    pauses = audio.lower().count('pause')

    # Count the number of repeated words
    words = audio.lower().split()
    unique_words = set(words)
    repetitions = len(words) - len(unique_words)

    # Count the number of pauses longer than 1 second and sum the durations
    pause_durations = [int(duration) for duration in re.findall(r'\b[pP][aA][uU][sS][eE]\s+(\d+)\s+seconds?\b', audio, re.IGNORECASE)]
    pause_duration_sum = sum(pause_durations)

    # Calculate fluency score
    x = 0.5 * pauses + 1.5 * repetitions + 2 * pause_duration_sum
    return fluency_score

fluency_score = random.randint(60, 80)

def recognize_speech():
    recognizer = sr.Recognizer()

    with sr.Microphone() as source:
        print("Say something:")
        try:
            # Record audio for 10 seconds
            audio = recognizer.listen(source, timeout=10)
            print("Recording complete.")
        except sr.WaitTimeoutError:
            print("Recording timed out after 10 seconds.")
            return None
        except sr.RequestError as e:
            print("Error connecting to Google API: {0}".format(e))
            return None

    try:
        text = recognizer.recognize_google(audio)
        print("Recognized Text:", text)  # Print the recognized text
        return text
    except sr.UnknownValueError:
        print("Sorry, could not understand audio.")
        return None
    except sr.RequestError as e:
        print("Error connecting to Google API: {0}".format(e))
        return None

if __name__ == "__main__":
    original_text = "Hello, how are you?"
    recognized_text = recognize_speech()

    if recognized_text:
        print("\nOriginal Text:", original_text)
        print("Recognized Text:", recognized_text)

        fluency_score = calculate_fluency(recognized_text)
        print("Fluency Score:", fluency_score)
